name: PHPStan and PHPUnit

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/**'  # src 配下のファイルが変更された場合のみ実行
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'src/**'  # src 配下のファイルが変更された場合のみ実行

jobs:
  phpstan_and_phpunit:
    name: PHPStan and PHPUnit (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["8.4"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, simplexml
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: "Restore PHPStan-result cache"
        uses: actions/cache/restore@v4
        with:
          path: vendor/phpstan/phpstan/tmp
          key: "phpstan-result-cache-${{ github.run_id }}"
          restore-keys: |
            phpstan-result-cache-

      - name: Check with PHPStan
        run: vendor/bin/phpstan --configuration=phpstan.neon.dist --memory-limit=1G

      - name: "Save PHPStan-result cache"
        uses: actions/cache/save@v4
        if: github.event.pull_request.merged == true
        with:
          path: vendor/phpstan/phpstan/tmp
          key: "phpstan-result-cache-${{ github.run_id }}"

      - name: Run PHPUnit tests
        run: php -d zend.assertions=1 vendor/bin/phpunit --configuration=phpunit.xml.dist --testdox --colors=always
